// Generated by view binder compiler. Do not edit!
package com.example.control.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.control.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBootBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton bootbutton;

  @NonNull
  public final ImageButton offbutton;

  @NonNull
  public final ImageButton refreshbutton;

  @NonNull
  public final ImageButton restartbutton;

  @NonNull
  public final ImageButton sleepbutton;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView text1;

  private FragmentBootBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton bootbutton,
      @NonNull ImageButton offbutton, @NonNull ImageButton refreshbutton,
      @NonNull ImageButton restartbutton, @NonNull ImageButton sleepbutton, @NonNull TextView text,
      @NonNull TextView text1) {
    this.rootView = rootView;
    this.bootbutton = bootbutton;
    this.offbutton = offbutton;
    this.refreshbutton = refreshbutton;
    this.restartbutton = restartbutton;
    this.sleepbutton = sleepbutton;
    this.text = text;
    this.text1 = text1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBootBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBootBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_boot, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBootBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bootbutton;
      ImageButton bootbutton = rootView.findViewById(id);
      if (bootbutton == null) {
        break missingId;
      }

      id = R.id.offbutton;
      ImageButton offbutton = rootView.findViewById(id);
      if (offbutton == null) {
        break missingId;
      }

      id = R.id.refreshbutton;
      ImageButton refreshbutton = rootView.findViewById(id);
      if (refreshbutton == null) {
        break missingId;
      }

      id = R.id.restartbutton;
      ImageButton restartbutton = rootView.findViewById(id);
      if (restartbutton == null) {
        break missingId;
      }

      id = R.id.sleepbutton;
      ImageButton sleepbutton = rootView.findViewById(id);
      if (sleepbutton == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = rootView.findViewById(id);
      if (text1 == null) {
        break missingId;
      }

      return new FragmentBootBinding((ConstraintLayout) rootView, bootbutton, offbutton,
          refreshbutton, restartbutton, sleepbutton, text, text1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
